AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a VPC with subnets, Transit Gateway, NACLs, and NAT Gateway.

Resources:
  # VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  # Internet Gateway
  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyInternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  # Subnets
  PublicSubnet1AZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1AZ1

  PublicSubnet2AZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2AZ1

  PrivateSubnet1AZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.30.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PrivateSubnet1AZ1

  PrivateSubnet2AZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.40.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PrivateSubnet2AZ1

  PublicSubnet1AZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.6.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1AZ2

  PublicSubnet2AZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.9.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2AZ2

  PrivateSubnet1AZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.60.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PrivateSubnet1AZ2

  PrivateSubnet2AZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.70.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PrivateSubnet2AZ2

  # Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable

  # Public Route and Association
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1AZ1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2AZ1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1AZ2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet4RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2AZ2
      RouteTableId: !Ref PublicRouteTable

  # Private Route and Association
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref MyNatGateway

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1AZ1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2AZ1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1AZ2
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet4RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2AZ2
      RouteTableId: !Ref PrivateRouteTable

  # Transit Gateway
  MyTransitGateway:
    Type: AWS::EC2::TransitGateway
    Properties:
      Description: Transit Gateway for VPC
      Tags:
        - Key: Name
          Value: MyTransitGateway

  TransitGatewayAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      TransitGatewayId: !Ref MyTransitGateway
      VpcId: !Ref MyVPC
      SubnetIds:
        - !Ref PublicSubnet1AZ1
        - !Ref PublicSubnet1AZ2

      Tags:
        - Key: Name
          Value: TransitGatewayAttachment

  # NAT Gateway
  MyNatGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  MyNatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt MyNatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1AZ1
      Tags:
        - Key: Name
          Value: MyNatGateway

  # NACLs
  PublicSubnetNACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PublicSubnetNACL

  PublicSubnetIngressRule1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicSubnetNACL
      RuleNumber: 100
      Protocol: 6  # TCP
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80

  PublicSubnetIngressRule2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicSubnetNACL
      RuleNumber: 101
      Protocol: 6  # TCP
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443

  PublicSubnetEgressRule1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicSubnetNACL
      RuleNumber: 100
      Protocol: 6  # TCP
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80

  PublicSubnetEgressRule2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicSubnetNACL
      RuleNumber: 101
      Protocol: 6  # TCP
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443

  PrivateSubnetNACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PrivateSubnetNACL

  PrivateSubnetIngressRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateSubnetNACL
      RuleNumber: 100
      Protocol: 6  # TCP
      RuleAction: allow
      Egress: false
      CidrBlock: 10.0.1.0/24
      PortRange:
        From: 3000
        To: 3000

  PrivateSubnetEgressRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateSubnetNACL
      RuleNumber: 100
      Protocol: 6  # TCP
      RuleAction: allow
      Egress: true
      CidrBlock: 10.0.1.0/24
      PortRange:
        From: 3000
        To: 3000

  # Associating the NACL with Public Subnets
  PublicSubnet1AZ1NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1AZ1
      NetworkAclId: !Ref PublicSubnetNACL

  PublicSubnet2AZ1NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2AZ1
      NetworkAclId: !Ref PublicSubnetNACL

  PublicSubnet1AZ2NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1AZ2
      NetworkAclId: !Ref PublicSubnetNACL

  PublicSubnet2AZ2NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2AZ2
      NetworkAclId: !Ref PublicSubnetNACL

  # Associating the NACL with Private Subnets
  PrivateSubnet1AZ1NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1AZ1
      NetworkAclId: !Ref PrivateSubnetNACL

  PrivateSubnet2AZ1NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2AZ1
      NetworkAclId: !Ref PrivateSubnetNACL

  PrivateSubnet1AZ2NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1AZ2
      NetworkAclId: !Ref PrivateSubnetNACL

  PrivateSubnet2AZ2NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2AZ2
      NetworkAclId: !Ref PrivateSubnetNACL

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref MyVPC

  PublicSubnet1AZ1Id:
    Description: Public Subnet 1 AZ1 ID
    Value: !Ref PublicSubnet1AZ1

  PublicSubnet2AZ1Id:
    Description: Public Subnet 2 AZ1 ID
    Value: !Ref PublicSubnet2AZ1

  PrivateSubnet1AZ1Id:
    Description: Private Subnet 1 AZ1 ID
    Value: !Ref PrivateSubnet1AZ1

  PrivateSubnet2AZ1Id:
    Description: Private Subnet 2 AZ1 ID
    Value: !Ref PrivateSubnet2AZ1
  
  PublicSubnet1AZ2Id:
    Description: Public Subnet 1 AZ2 ID
    Value: !Ref PublicSubnet1AZ2

  PublicSubnet2AZ2Id:
    Description: Public Subnet 2 AZ2 ID
    Value: !Ref PublicSubnet2AZ2

  PrivateSubnet1AZ2Id:
    Description: Private Subnet 1 AZ2 ID
    Value: !Ref PrivateSubnet1AZ2

  PrivateSubnet2AZ2Id:
    Description: Private Subnet 2 AZ2 ID
    Value: !Ref PrivateSubnet2AZ2

  TransitGatewayId:
    Description: Transit Gateway ID
    Value: !Ref MyTransitGateway

